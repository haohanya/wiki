"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[5799],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),p=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=p(e.components);return a.createElement(c.Provider,{value:n},e.children)},s="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},k=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),s=p(t),k=r,m=s["".concat(c,".").concat(k)]||s[k]||f[k]||l;return t?a.createElement(m,i(i({ref:n},u),{},{components:t})):a.createElement(m,i({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=k;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o[s]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}k.displayName="MDXCreateElement"},2570:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>f,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=t(7462),r=(t(7294),t(3905));const l={},i="NIO",o={unversionedId:"\u540e\u7aef/JDK/Nio",id:"\u540e\u7aef/JDK/Nio",title:"NIO",description:"\u4ec0\u4e48\u662f Java NIO",source:"@site/docs/\u540e\u7aef/JDK/Nio.md",sourceDirName:"\u540e\u7aef/JDK",slug:"/\u540e\u7aef/JDK/Nio",permalink:"/docs/\u540e\u7aef/JDK/Nio",draft:!1,editUrl:"https://github.com/pannanxu/wiki/docs/\u540e\u7aef/JDK/Nio.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"JDK \u6e90\u7801",permalink:"/docs/\u540e\u7aef/JDK/JDK\u6e90\u7801"},next:{title:"Linux",permalink:"/docs/\u540e\u7aef/Linux"}},c={},p=[{value:"\u4ec0\u4e48\u662f Java NIO",id:"\u4ec0\u4e48\u662f-java-nio",level:3},{value:"NIO \u548c BIO \u7684\u6bd4\u8f83",id:"nio-\u548c-bio-\u7684\u6bd4\u8f83",level:3},{value:"\u7f13\u51b2\u533a",id:"\u7f13\u51b2\u533a",level:3},{value:"\u4ec0\u4e48\u662f\u7f13\u51b2\u533a",id:"\u4ec0\u4e48\u662f\u7f13\u51b2\u533a",level:4},{value:"Buffer \u7c7b\u548c\u5b50\u7c7b",id:"buffer-\u7c7b\u548c\u5b50\u7c7b",level:4},{value:"ByteBuffer",id:"bytebuffer",level:4},{value:"\u901a\u9053\uff08Channel\uff09",id:"\u901a\u9053channel",level:3},{value:"\u4ec0\u4e48\u662f Channel",id:"\u4ec0\u4e48\u662f-channel",level:4},{value:"FileChannel \u7c7b",id:"filechannel-\u7c7b",level:4},{value:"FileChannel Example",id:"filechannel-example",level:4},{value:"\u672c\u5730\u6587\u4ef6\u5199\u5165",id:"\u672c\u5730\u6587\u4ef6\u5199\u5165",level:5},{value:"\u672c\u5730\u6587\u4ef6\u8bfb\u53d6",id:"\u672c\u5730\u6587\u4ef6\u8bfb\u53d6",level:5},{value:"\u6587\u4ef6\u8bfb\u53d6\u5e76\u5199\u5165",id:"\u6587\u4ef6\u8bfb\u53d6\u5e76\u5199\u5165",level:5},{value:"\u6587\u4ef6\u62f7\u8d1d transferFrom",id:"\u6587\u4ef6\u62f7\u8d1d-transferfrom",level:5},{value:"\u6ce8\u610f\u4e8b\u9879\u548c\u7ec6\u8282",id:"\u6ce8\u610f\u4e8b\u9879\u548c\u7ec6\u8282",level:3},{value:"\u7c7b\u578b\u6ce8\u610f",id:"\u7c7b\u578b\u6ce8\u610f",level:4},{value:"\u666e\u901a Buffer \u8f6c\u53ea\u8bfb Buffer",id:"\u666e\u901a-buffer-\u8f6c\u53ea\u8bfb-buffer",level:4},{value:"MappedByteBuffer",id:"mappedbytebuffer",level:4},{value:"Scattering \u548c Gathering",id:"scattering-\u548c-gathering",level:4},{value:"Selector \u9009\u62e9\u5668",id:"selector-\u9009\u62e9\u5668",level:3},{value:"\u4ec0\u4e48\u662f Selector",id:"\u4ec0\u4e48\u662f-selector",level:4},{value:"Selector \u7c7b\u76f8\u5173\u65b9\u6cd5",id:"selector-\u7c7b\u76f8\u5173\u65b9\u6cd5",level:4},{value:"NIO \u5feb\u901f\u5165\u95e8",id:"nio-\u5feb\u901f\u5165\u95e8",level:3},{value:"SelectionKey",id:"selectionkey",level:4},{value:"ServerSocketChannel",id:"serversocketchannel",level:4},{value:"SocketChannel",id:"socketchannel",level:4},{value:"\u7f16\u5199\u4e00\u4e2a\u7fa4\u804a\u5c0f\u5e94\u7528",id:"\u7f16\u5199\u4e00\u4e2a\u7fa4\u804a\u5c0f\u5e94\u7528",level:3},{value:"\u670d\u52a1\u7aef",id:"\u670d\u52a1\u7aef",level:4},{value:"\u5ba2\u6237\u7aef",id:"\u5ba2\u6237\u7aef",level:4},{value:"\u96f6\u62f7\u8d1d",id:"\u96f6\u62f7\u8d1d",level:3}],u={toc:p},s="wrapper";function f(e){let{components:n,...t}=e;return(0,r.kt)(s,(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"nio"},"NIO"),(0,r.kt)("h3",{id:"\u4ec0\u4e48\u662f-java-nio"},"\u4ec0\u4e48\u662f Java NIO"),(0,r.kt)("p",null,"Java NIO\uff08java non-blockIng IO\uff09\u662f\u6307 JDK1.4 \u53ca\u4ee5\u4e0a\u7248\u672c\u91cc\u63d0\u4f9b\u7684\u6743\u9650 Api \uff08New IO\uff09\uff0c\u4e3a\u6240\u6709\u7684\u539f\u59cb\u7c7b\u578b\uff08boolean\u7c7b\u578b\u9664\u5916\uff09\u63d0\u4f9b\u7f13\u5b58\u652f\u6301\u7684\u6570\u636e\u5bb9\u5668\uff0c\u4f7f\u7528\u5b83\u53ef\u4ee5\u63d0\u4f9b\u975e\u963b\u585e\u5f0f\u7684\u8be5\u4f38\u7f29\u6027\u80fd\u7f51\u7edc"),(0,r.kt)("p",null,"NIO \u76f8\u5173\u7684\u7c7b\u90fd\u653e\u5728 ",(0,r.kt)("inlineCode",{parentName:"p"},"java.nio")," \u5305\u53ca\u5b50\u5305\u4e2d"),(0,r.kt)("p",null,"NIO \u6709\u4e09\u5927\u6838\u5fc3\u90e8\u5206\uff1aChannel\uff08\u901a\u9053\uff09\u3001Buffer\uff08\u7f13\u51b2\u533a\uff09\u3001Selector\uff08\u9009\u62e9\u5668\uff09"),(0,r.kt)("p",null,"NIO \u662f\u9762\u5411\u7f13\u51b2\u533a\uff0c\u6216\u9762\u5411\u5757\u7f16\u7a0b\u7684\u3002\u6570\u636e\u8bfb\u53d6\u5230\u4e00\u4e2a\u5b83\u5904\u7406\u7684\u7f13\u51b2\u533a\uff0c\u9700\u8981\u65f6\u53ef\u4ee5\u5728\u7f13\u51b2\u533a\u4e2d\u524d\u540e\u79fb\u52a8\uff0c\u8fd9\u5c31\u589e\u52a0\u4e86\u5904\u7406\u8fc7\u7a0b\u4e2d\u7684\u7075\u6d3b\u6027\uff0c\u4f7f\u7528\u5b83\u53ef\u4ee5\u63d0\u4f9b\u975e\u963b\u585e\u7684\u9ad8\u4f38\u7f29\u6027\u7f51\u7edc"),(0,r.kt)("p",null,"Java NIO \u7684\u975e\u963b\u585e\u6a21\u5f0f\uff0c\u4f7f\u4e00\u4e2a\u5baa\u66fe\u4ece\u67d0\u901a\u9053\u53d1\u9001\u8bf7\u6c42\u6216\u8005\u8bfb\u53d6\u6570\u636e\uff0c\u4f46\u662f\u5b83\u6280\u80fd\u5f97\u5230\u65e5\u671f\u524d\u53ef\u7528\u7684\u6570\u636e\uff0c\u5982\u679c\u76ee\u524d\u6ca1\u6709\u6570\u636e\u53ef\u7528\u65f6\uff0c\u5c31\u4ec0\u4e48\u90fd\u4e0d\u4f1a\u83b7\u53d6\uff0c\u800c\u4e0d\u662f\u4fdd\u6301\u7ebf\u7a0b\u963b\u585e\uff0c\u6240\u4ee5\u76f4\u81f3\u6570\u636e\u4fbf\u7684\u53ef\u4ee5\u8bfb\u53d6\u4e4b\u524d\uff0c\u8be5\u7ebf\u7a0b\u53ef\u4ee5\u7ee7\u7eed\u505a\u5176\u4ed6\u7684\u4e8b\u60c5\uff0c\u975e\u963b\u585e\u5199\u4e5f\u662f\u5982\u6b64\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u8bf7\u6c42\u5199\u5165\u4e00\u4e9b\u6570\u636e\u5230\u67d0\u901a\u9053\uff0c\u4f46\u4e0d\u9700\u8981\u7b49\u5f85\u5b83\u5b8c\u5168\u5199\u5165\uff0c\u8fd9\u4e2a\u53bf\u57ce\u540c\u4e8b\u53ef\u4ee5\u53bb\u505a\u522b\u7684\u4e8b\u60c5"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u7b80\u5355\u8bf4\uff0cNIO \u662f\u53ef\u4ee5\u505a\u5230\u7528\u4e00\u4e2a\u7ebf\u7a0b\u6765\u5904\u7406\u591a\u4e2a\u64cd\u4f5c\u3002")),(0,r.kt)("h3",{id:"nio-\u548c-bio-\u7684\u6bd4\u8f83"},"NIO \u548c BIO \u7684\u6bd4\u8f83"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"BIO \u4ee5\u6d41\u7684\u65b9\u5f0f\u5904\u7406\u6570\u636e\uff0c\u800c NIO \u4ee5\u7f13\u51b2\u533a\u7684\u65b9\u5f0f\u5904\u7406\u6570\u636e\uff0c\u7f13\u51b2\u533a\u7684\u6548\u7387\u6bd4\u6d41\u7684\u6548\u7387\u9ad8\u5f88\u591a"),(0,r.kt)("li",{parentName:"ol"},"BIO \u662f\u963b\u585e\u7684\uff0cNIO \u662f\u975e\u963b\u585e\u7684"),(0,r.kt)("li",{parentName:"ol"},"BIO \u57fa\u4e8e\u5b57\u8282\u6d41\u548c\u5b57\u7b26\u6d41\u8fdb\u884c\u64cd\u4f5c\uff0c\u800c NIO \u57fa\u4e8e Channel \u548c Buffer \u8fdb\u884c\u64cd\u4f5c\uff0c",(0,r.kt)("inlineCode",{parentName:"li"},"\u6570\u636e\u603b\u662f\u4ece\u901a\u9053\u53bb\u8bfb\u5230\u7f13\u51b2\u533a\u4e2d"),"\uff0c\u6216\u8005",(0,r.kt)("inlineCode",{parentName:"li"},"\u4ece\u7f13\u51b2\u533a\u5199\u5165\u5230\u901a\u9053\u4e2d"),"\u3002Selector \u7528\u4e8e\u5efa\u901a\u591a\u4e2a\u901a\u9053\u7684\u4e8b\u4ef6\uff08\u6bd4\u5982\uff1a\u8fde\u63a5\u8bf7\u6c42\uff0c\u6570\u636e\u5230\u8fbe\u7b49\uff09\uff0c\u56e0\u6b64\u4f7f\u7528\u5355\u4e2a\u7ebf\u7a0b\u5c31\u53ef\u4ee5\u76d1\u542c\u591a\u4e2a\u5ba2\u6237\u7aef\u901a\u9053")),(0,r.kt)("h3",{id:"\u7f13\u51b2\u533a"},"\u7f13\u51b2\u533a"),(0,r.kt)("h4",{id:"\u4ec0\u4e48\u662f\u7f13\u51b2\u533a"},"\u4ec0\u4e48\u662f\u7f13\u51b2\u533a"),(0,r.kt)("p",null,"\u7f13\u51b2\u533a\uff08Buffer\uff09\uff1a\u672c\u503c\u4e0a\u662f\u4e00\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"\u53ef\u4ee5\u8bfb\u5199\u6570\u636e\u7684\u5185\u5b58\u5757"),"\uff0c\u4e5f\u53ef\u4e5f\u7406\u89e3\u6210",(0,r.kt)("inlineCode",{parentName:"p"},"\u5bb9\u5668\u5bf9\u8c61(\u542b\u6570\u7ec4)"),"\uff0c\u8be5\u5bf9\u8c61\u63d0\u4f9b\u4e86\u4e00\u7ec4\u65b9\u6cd5\uff0c\u53ef\u4ee5\u66f4\u8f7b\u677e\u7684\u4f7f\u7528\u5185\u5b58\u5757\uff0c\u7f13\u51b2\u533a\u5bf9\u8c61\u5185\u7f6e\u4e86\u4e00\u4e9b\u673a\u5236\uff0c\u80fd\u591f\u8ddf\u8e2a\u548c\u8bb0\u5f55\u7f13\u51b2\u533a\u7684\u72b6\u6001\u53d8\u5316\u60c5\u51b5\u3002Channel \u63d0\u4f9b\u4ece\u6587\u4ef6\u3001\u7f51\u7edc\u8bfb\u53d6\u6570\u636e\u7684\u901a\u9053\uff0c\u4f46\u662f\u8bfb\u53d6\u548c\u5199\u5165\u7684\u6570\u636e\u90fd\u5fc5\u987b\u7531 Buffer \u5b9e\u73b0"),(0,r.kt)("h4",{id:"buffer-\u7c7b\u548c\u5b50\u7c7b"},"Buffer \u7c7b\u548c\u5b50\u7c7b"),(0,r.kt)("p",null,"\u5728 NIO \u4e2d\uff0cBuffer \u662f\u4e00\u4e2a\u9876\u5c42\u7236\u7c7b\uff0c\u5b83\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://img-ages-test0001.oss-cn-hangzhou.aliyuncs.com/images/image-20210117200202929.png",alt:"image-20210117200202929"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"CharBuffer"),"\uff1a\u5b58\u50a8\u5b57\u7b26\u6570\u636e\u5230\u7f13\u51b2\u533a"),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"FloatBuffer"),"\uff1a\u5b58\u50a8\u5c0f\u6570\u5230\u7f13\u51b2\u533a"),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"IntBuffer"),"\uff1a\u5b58\u50a8\u6574\u6570\u5230\u7f13\u51b2\u533a"),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"ByteBUffer"),"\uff1a\u5b58\u50a8\u5b57\u8282\u6570\u636e\u5230\u7f13\u51b2\u533a"),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"DoubleBuffer"),"\uff1a\u5b58\u50a8\u5c0f\u6570\u5230\u7f13\u51b2\u533a"),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"LongBuffer"),"\uff1a\u5b58\u50a8\u957f\u6574\u5f62\u5230\u7f13\u51b2\u533a"),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"ShortBuffer"),"\uff1a\u5b58\u50a8\u5b57\u7b26\u4e32\u5230\u7f13\u51b2\u533a")),(0,r.kt)("p",null,"Buffer \u7c7b\u5b9a\u4e49\u4e86\u6240\u6709\u7684\u7f13\u51b2\u533a\u90fd\u5177\u6709\u7684\u56db\u4e2a\u5c5e\u6027\u6765\u63d0\u4f9b\u5173\u4e8e\u5176\u6240\u5305\u542b\u7684\u6570\u636e\u5143\u7d20\u7684\u4fe1\u606f"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Invariants: mark <= position <= limit <= capacity\nprivate int mark = -1;\nprivate int position = 0;\nprivate int limit;\nprivate int capacity;\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"mark"),"\uff1a\u6807\u8bb0"),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"position"),"\uff1a\u4f4d\u7f6e\uff0c\u4e0b\u4e00\u4e2a\u8981\u88ab\u8bfb\u53d6\u6216\u8005\u5199\u5165\u7684\u5143\u7d20\u7684\u7d22\u5f15\uff0c\u6bcf\u6b21\u8bfb\u5199\u7f13\u5b58\u6570\u636e\u65f6\u90fd\u4f1a\u6539\u53d8\u8fd9\u4e2a\u503c\uff0c\u4e3a\u4e0b\u6b21\u8bfb\u5199\u64cd\u4f5c\u505a\u51c6\u5907"),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"limit"),"\uff1a\u8868\u793a\u7f13\u51b2\u533a\u7684\u5f53\u524d\u7ec8\u70b9\uff0c\u4e0d\u80fd\u5bf9\u7f13\u51b2\u533a\u8d85\u8fc7\u6781\u9650\u7684\u4f4d\u7f6e\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\u3002\u4e14\u6781\u9650\u662f\u53ef\u4ee5\u4fee\u6539\u7684"),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"capacity"),"\uff1a\u5bb9\u91cf\uff0c\u5373\u53ef\u4ee5\u5bb9\u7eb3\u7684\u6700\u5927\u6570\u636e\u91cf\u3002\u5728\u7f13\u51b2\u533a\u521b\u5efa\u65f6\u88ab\u8bbe\u5b9a\uff0c\u4e14\u4e0d\u80fd\u6539\u53d8")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Buffer \u7c7b\u76f8\u5173\u65b9\u6cd5")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public abstract class Buffer {\n    // JKD1.4\n    public final int capacity() // \u8fd4\u56de\u6b64\u7f13\u51b2\u533a\u7684\u5bb9\u91cf\n    public final int position() // \u8fd4\u56de\u6b64\u7f13\u51b2\u533a\u7684\u4f4d\u7f6e\n    public final Buffer position(int newPosition) // \u8bbe\u7f6e\u6b64\u7f13\u51b2\u533a\u7684\u4f4d\u7f6e\n    public final int limit() // \u8fd4\u56de\u6b64\u7f13\u51b2\u533a\u7684\u9650\u5236\n    public final Buffer limit(int newLimit) // \u8bbe\u7f6e\u6b64\u7f13\u51b2\u533a\u7684\u9650\u5236\n    public final Buffer mark() // \u5728\u6b64\u7f13\u51b2\u533a\u7684\u4f4d\u7f6e\u8bbe\u7f6e\u6807\u8bb0\n    public final Buffer reset() // \u5c06\u6b64\u7f13\u51b2\u533a\u7684\u4f4d\u7f6e\u91cd\u7f6e\u4e3a\u4ee5\u524d\u6807\u8bb0\u7684\u4f4d\u7f6e\n    public final Buffer clear() // \u6e05\u9664\u6b64\u7f13\u51b2\u533a\uff0c\u5373\u5c06\u5404\u4e2a\u6807\u8bb0\u6062\u590d\u5230\u521d\u59cb\u72b6\u6001\uff0c\u4f46\u662f\u6570\u636e\u5e76\u6ca1\u6709\u771f\u6b63\u64e6\u9664\n    public final Buffer flip() // \u53cd\u8f6c\u6b64\u7f13\u51b2\u533a\n    public final Buffer rewind() // \u91cd\u7ed5\u6b64\u7f13\u51b2\u533a\n    public final int remaining() // \u8fd4\u56de\u5f53\u524d\u4f4d\u7f6e\u4e0e\u9650\u5236\u4e4b\u95f4\u7684\u5143\u7d20\u6570\n    public final boolean hasRemaining() // \u544a\u77e5\u6b64\u7f13\u51b2\u533a\u662f\u5426\u4e3a\u53ea\u8bfb\u7f13\u51b2\u533a\n    public abstract boolean isReadOnly(); // \u544a\u77e5\u6b64\u7f13\u51b2\u533a\u662f\u5426\u4e3a\u53ea\u8bfb\u7f13\u51b2\u533a\n    // JDK1.6\n    public abstract boolean hasArray(); // \u544a\u77e5\u6b64\u7f13\u51b2\u533a\u662f\u5426\u5177\u6709\u53ef\u8bbf\u95ee\u7684\u5e95\u5c42\u5b9e\u73b0\u6570\u7ec4\n    public abstract Object array(); // \u8fd4\u56de\u6b64\u7f13\u51b2\u533a\u7684\u5e95\u5c42\u5b9e\u73b0\u6570\u7ec4\n    public abstract int arrayOffset(); // \u8fd4\u56de\u6b64\u7f13\u51b2\u533a\u7684\u5e95\u5c42\u5b9e\u73b0\u6570\u7ec4\u4e2d\u7b2c\u4e00\u4e2a\u7f13\u51b2\u533a\u5143\u7d20\u7684\u504f\u79fb\u91cf\n    public abstract boolean isDirect(); // \u544a\u77e5\u6b64\u7f13\u51b2\u533a\u662f\u5426\u4e3a\u76f4\u63a5\u7f13\u51b2\u533a\n}\n")),(0,r.kt)("h4",{id:"bytebuffer"},"ByteBuffer"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public abstract class ByteBuffer {\n    // \u7f13\u51b2\u533a\u521b\u5efa\u76f8\u5173API\n    public static ByteBuffer allocateDirect(int capacity); // \u521b\u5efa\u76f4\u63a5\u7f13\u51b2\u533a\n    public static ByteBuffer allocate(int capacity); // \u8bbe\u7f6e\u7f13\u51b2\u533a\u7684\u521d\u59cb\u5bb9\u91cf\n    public static ByteBuffer wrap(byte[] array, int offset, int length); // \u6784\u9020\u521d\u59cb\u5316\u4f4d\u7f6e offset \u548c\u4e0a\u754c length \u7684\u7f13\u51b2\u533a\n    public static ByteBuffer wrap(byte[] array); // \u5427\u4e00\u4e2a\u6570\u7ec4\u653e\u5230\u7f13\u51b2\u533a\u4e2d\u4f7f\u7528\n    // \u7f13\u5b58\u533a\u5b58\u53d6\u76f8\u5173API\n    public abstract byte get(); // \u4ece\u5f53\u524d\u4f4d\u7f6e position \u4e0aget\uff0cget\u4e4b\u540e\uff0cposition\u4f1a\u81ea\u52a8 + 1\n    public abstract byte get(int index); // \u4ece\u7edd\u5bf9\u4f4d\u7f6eget\n    public abstract ByteBuffer put(byte b); // \u4ece\u5f53\u524d\u4f4d\u7f6e\u4e0a\u6dfb\u52a0\uff0cput\u4e4b\u540e\uff0cposition\u4f1a\u81ea\u52a8 - 1\n    public abstract ByteBuffer put(int index, byte b); // \u4ece\u7edd\u5bf9\u4f4d\u7f6e\u4e0aput\n}\n")),(0,r.kt)("h3",{id:"\u901a\u9053channel"},"\u901a\u9053\uff08Channel\uff09"),(0,r.kt)("h4",{id:"\u4ec0\u4e48\u662f-channel"},"\u4ec0\u4e48\u662f Channel"),(0,r.kt)("p",null,"Nio \u7684\u901a\u9053\u7c7b\u4f3c\u4e8e\u6d41\u4f46\u662f\u6709\u4e00\u90e8\u5206\u533a\u522b"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u901a\u9053\u53ef\u4ee5\u540c\u4e8b\u8fdb\u884c\u8bfb\u5199\uff0c\u800c\u6d41\u53ea\u80fd\u8bfb\u6216\u8005\u5199"),(0,r.kt)("li",{parentName:"ol"},"\u901a\u9053\u53ef\u4ee5\u5b9e\u73b0\u5f02\u6b65\u8bfb\u5199\u6570\u636e"),(0,r.kt)("li",{parentName:"ol"},"\u901a\u9053\u53ef\u4ee5\u4ece\u7f13\u51b2\u533a\u8bfb\u6570\u636e\uff0c\u4e5f\u53ef\u4e5f\u5199\u6570\u636e\u5230\u7f13\u51b2\u533a")),(0,r.kt)("p",null,"BIO \u4e2d\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"Stream")," \u662f\u5355\u5411\u7684\uff0c\u4f8b\u5982 ",(0,r.kt)("inlineCode",{parentName:"p"},"FileInputStream")," \u53ea\u80fd\u8fdb\u884c\u8bfb\u53d6\u6570\u636e\u7684\u64cd\u4f5c\uff0c\u800c NIO \u4e2d\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"Channel")," \u662f\u53cc\u5411\u7684\uff0c\u53ef\u4ee5\u8fdb\u884c\u8bfb\u548c\u5199\u64cd\u4f5c"),(0,r.kt)("p",null,"Channel \u5728 NIO \u4e2d\u662f\u4e00\u4e2a\u63a5\u53e3",(0,r.kt)("inlineCode",{parentName:"p"},"public interface Channel extends Closeable{}")),(0,r.kt)("p",null,"\u5e38\u7528\u7684 Channel \u7c7b\u6709\uff1a FileChannel\u3001DatagramChannel\u3001ServerSocketChannel\u3001SocketChannel"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"FileChannel")," \u7528\u4e8e\u6587\u4ef6\u7684\u6570\u636e\u8bfb\u5199"),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"DatagramChannel")," \u7528\u4e8e UDP \u7684\u6570\u636e\u8bfb\u5199"),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"ServerSocketChannel"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"SocketChannel "),"\u7528\u4e8e TCP \u7684\u6570\u636e\u8bfb\u5199"),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"ServerSocketChannel")," \u7c7b\u4f3c\u4e8eBIO\u4e2d\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"ServerSocket")),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"SocketChannel")," \u7c7b\u4f3c\u4e8eBIO\u4e2d\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"Socket"))),(0,r.kt)("h4",{id:"filechannel-\u7c7b"},"FileChannel \u7c7b"),(0,r.kt)("p",null,"FileChannel \u4e3b\u8981\u7528\u6765\u5bf9\u672c\u5730\u6587\u4ef6\u8fdb\u884cIO\u64cd\u4f5c\uff0c\u5e38\u89c1\u7684\u65b9\u6cd5\u5982\u4e0b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public abstract int read(ByteBuffer dst) throws IOException; // \u4ece\u901a\u9053\u8bfb\u53d6\u6570\u636e\u5e76\u653e\u5230\u7f13\u51b2\u533a\u4e2d\npublic abstract int write(ByteBuffer src) throws IOException; // \u5427\u7f13\u51b2\u533a\u7684\u6570\u636e\u5199\u9053\u901a\u9053\u4e2d\n// \u5427\u6570\u636e\u4ece\u5f53\u524d\u901a\u9053\u8d4b\u503c\u7ed9\u76ee\u6807\u901a\u9053\npublic abstract long transferTo(long position, long count, WritableByteChannel target) throws IOException;\n// \u4ece\u76ee\u6807\u901a\u9053\u4e2d\u8d4b\u503c\u6570\u636e\u5230\u5f53\u524d\u901a\u9053\npublic abstract long transferFrom(ReadableByteChannel src, long position, long count) throws IOException;\n")),(0,r.kt)("h4",{id:"filechannel-example"},"FileChannel Example"),(0,r.kt)("h5",{id:"\u672c\u5730\u6587\u4ef6\u5199\u5165"},"\u672c\u5730\u6587\u4ef6\u5199\u5165"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'package io.mvvm.nio.channel;\n\nimport java.io.FileOutputStream;\nimport java.nio.ByteBuffer;\nimport java.nio.channels.FileChannel;\nimport java.nio.charset.StandardCharsets;\n\n/**\n * @program: Netty\n * @description: FileChannel \u5199\u5165\n * @author: \u6f58\n * @create: 2021-01-17 20:51\n **/\npublic class FileChannelWriteExample {\n    public static void main(String[] args) throws Exception {\n        String name = "zhangsan";\n        // \u521b\u5efa\u4e00\u4e2a\u8f93\u51fa\u6d41\n        FileOutputStream stream = new FileOutputStream("E:\\\\fileName.txt");\n        // \u901a\u8fc7 stream \u83b7\u53d6 FileChannel\n        FileChannel channel = stream.getChannel();\n        // \u521b\u5efa\u4e00\u4e2a\u7f13\u51b2\u533a\n        ByteBuffer buffer = ByteBuffer.allocate(1024);\n        // \u5c06 name \u653e\u5165\u5230 buffer\u4e2d\n        buffer.put(name.getBytes(StandardCharsets.UTF_8));\n        // \u5bf9 buffer \u8fdb\u884c flip\uff0c\u5373\u8bfb\u5199\u8f6c\u6362\n        buffer.flip();\n        // \u5c06 buffer \u5199\u5165\u5230 channel \u4e2d\n        channel.write(buffer);\n        channel.close();\n    }\n}\n\n')),(0,r.kt)("h5",{id:"\u672c\u5730\u6587\u4ef6\u8bfb\u53d6"},"\u672c\u5730\u6587\u4ef6\u8bfb\u53d6"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'package io.mvvm.nio.channel;\n\nimport java.io.FileInputStream;\nimport java.nio.ByteBuffer;\nimport java.nio.channels.FileChannel;\n\n/**\n * @program: Netty\n * @description: FileChannel \u8bfb\u53d6\n * @author: \u6f58\n * @create: 2021-01-17 20:58\n **/\npublic class FileChannelReadExample {\n    public static void main(String[] args) throws Exception {\n        // \u521b\u5efa\u6587\u4ef6\u8f93\u5165\u6d41\n        FileInputStream stream = new FileInputStream("\\\\fileName.txt");\n        // \u901a\u8fc7 stream \u83b7\u53d6 FileChannel\n        FileChannel channel = stream.getChannel();\n        // \u521b\u5efa\u4e00\u4e2a\u7f13\u51b2\u533a\n        ByteBuffer buffer = ByteBuffer.allocate(1024);\n        // \u5c06\u901a\u9053\u7684\u6570\u636e\u8bfb\u53d6\u5230 buffer\n        channel.read(buffer);\n        // \u5c06 buffer \u8f6c\u4e3a string\n        System.out.println(new String(buffer.array()));\n        channel.close();\n    }\n}\n')),(0,r.kt)("h5",{id:"\u6587\u4ef6\u8bfb\u53d6\u5e76\u5199\u5165"},"\u6587\u4ef6\u8bfb\u53d6\u5e76\u5199\u5165"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'package io.mvvm.nio.channel;\n\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.nio.ByteBuffer;\nimport java.nio.channels.FileChannel;\n\n/**\n * @program: Netty\n * @description: FileChannel \u6587\u4ef6\u62f7\u8d1d\n * @author: \u6f58\n * @create: 2021-01-17 21:06\n **/\npublic class FileChannelCopyExample {\n    public static void main(String[] args) throws Exception {\n        FileInputStream inputStream = new FileInputStream("E:\\\\work\\\\Netty\\\\nio\\\\src\\\\main\\\\resources\\\\fileName.txt");\n        FileChannel inputStreamChannel = inputStream.getChannel();\n\n        FileOutputStream outputStream = new FileOutputStream("E:\\\\work\\\\Netty\\\\nio\\\\src\\\\main\\\\resources\\\\fileName2.txt");\n        FileChannel outputStreamChannel = outputStream.getChannel();\n\n        ByteBuffer buffer = ByteBuffer.allocate(1024);\n\n        // \u5faa\u73af\u8bfb\u53d6\n        while (true) {\n            // \u6e05\u9664 buffer\n            buffer.clear();\n            int read = inputStreamChannel.read(buffer);\n            if (read == -1) {\n                // \u8bfb\u53d6\u5b8c\u6bd5\n                break;\n            }\n\n            // \u5c06 buffer \u4e2d\u6570\u636e\u5199\u5165\u5230 outputStreamChannel \u4e2d\n            // \u8bfb\u5199\u8f6c\u6362\n            buffer.flip();\n            outputStreamChannel.write(buffer);\n        }\n        outputStreamChannel.close();\n        inputStreamChannel.close();\n    }\n}\n\n')),(0,r.kt)("h5",{id:"\u6587\u4ef6\u62f7\u8d1d-transferfrom"},"\u6587\u4ef6\u62f7\u8d1d transferFrom"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'package io.mvvm.nio.channel;\n\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.nio.channels.FileChannel;\n\n/**\n * @program: Netty\n * @description: transferFrom \u6587\u4ef6\u62f7\u8d1d\n * @author: \u6f58\n * @create: 2021-01-17 21:15\n **/\npublic class FileChannelTransferFromExample {\n    public static void main(String[] args) throws Exception {\n        // \u521b\u5efa\u6d41\n        FileInputStream inputStream = new FileInputStream("E:\\\\work\\\\Netty\\\\nio\\\\src\\\\main\\\\resources\\\\fileName.txt");\n        FileOutputStream outputStream = new FileOutputStream("E:\\\\work\\\\Netty\\\\nio\\\\src\\\\main\\\\resources\\\\fileName1.txt");\n        // \u83b7\u53d6\u5bf9\u5e94\u6d41\u7684 channel\n        FileChannel inputStreamChannel = inputStream.getChannel();\n        FileChannel outputStreamChannel = outputStream.getChannel();\n        // \u4f7f\u7528 transferFrom \u8fdb\u884c\u62f7\u8d1d\n        outputStreamChannel.transferFrom(inputStreamChannel, 0, inputStreamChannel.size());\n        // \u5173\u95ed\u8d44\u6e90\n        inputStreamChannel.close();\n        outputStreamChannel.close();\n        outputStream.close();\n        inputStream.close();\n    }\n}\n\n')),(0,r.kt)("h3",{id:"\u6ce8\u610f\u4e8b\u9879\u548c\u7ec6\u8282"},"\u6ce8\u610f\u4e8b\u9879\u548c\u7ec6\u8282"),(0,r.kt)("h4",{id:"\u7c7b\u578b\u6ce8\u610f"},"\u7c7b\u578b\u6ce8\u610f"),(0,r.kt)("p",null,"ByteBuffer \u652f\u6301\u7c7b\u578b\u5316\u7684 put \u548cget\uff0cput\u65f6\u653e\u5165\u7684\u662f\u4ec0\u4e48\u6570\u636e\u7c7b\u578b\uff0cget\u65f6\u5c31\u5e94\u8be5\u4f7f\u7528\u5bf9\u5e94\u7684\u6570\u636e\u7c7b\u578b\u53d6\u51fa\uff0c\u5426\u5219\u53ef\u80fd\u6709 ",(0,r.kt)("inlineCode",{parentName:"p"},"BufferUnderflowException")," \u5f02\u5e38"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"ByteBuffer buffer = ByteBuffer.allocate(1024);\nbuffer.putShort((short) 10);\nbuffer.flip();\nbuffer.getInt();\n")),(0,r.kt)("h4",{id:"\u666e\u901a-buffer-\u8f6c\u53ea\u8bfb-buffer"},"\u666e\u901a Buffer \u8f6c\u53ea\u8bfb Buffer"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'ByteBuffer buffer = ByteBuffer.allocate(1024);\nbuffer.put("zhangsan".getBytes(StandardCharsets.UTF_8));\n// \u8bfb\u53d6\nbuffer.flip();\n// \u5f97\u5230\u4e00\u4e2a\u53ea\u8bfb\u7684 buffer\nByteBuffer readOnlyBuffer = buffer.asReadOnlyBuffer();\nSystem.out.println(readOnlyBuffer.getClass());\n// \u8bfb\u53d6\nwhile (readOnlyBuffer.hasRemaining()) {\n    System.out.println(readOnlyBuffer.get());\n}\n// \u6b64\u6bb5\u4ee3\u7801\u5c06\u4f1a\u629b\u51fa\u5f02\u5e38\n// Exception in thread "main" java.nio.ReadOnlyBufferException\nreadOnlyBuffer.put("lisi".getBytes(StandardCharsets.UTF_8));\n')),(0,r.kt)("h4",{id:"mappedbytebuffer"},"MappedByteBuffer"),(0,r.kt)("p",null,"NIO \u63d0\u4f9b\u4e86 MappedByteBuffer\uff0c\u53ef\u4ee5\u8ba9\u6587\u4ef6\u76f4\u63a5\u5728\u5185\u5b58\uff08\u5806\u5916\u7684\u5185\u5b58\uff09\u4e2d\u8fdb\u884c\u4fee\u6539\uff0c\u800c\u5982\u4f55\u540c\u6b65\u5230\u6587\u4ef6\u4e2d\u7531 NIO \u6765\u5b8c\u6210"),(0,r.kt)("h4",{id:"scattering-\u548c-gathering"},"Scattering \u548c Gathering"),(0,r.kt)("p",null,"\u524d\u9762\u7684\u8bfb\u5199\u64cd\u4f5c\u90fd\u662f\u901a\u8fc7\u4e00\u4e2a Buffer \u5b8c\u6210\u7684\uff0cNIO \u8fd8\u652f\u6301\u901a\u8fc7\u591a\u4e2a Buffer \uff08Buffer\u6570\u7ec4\uff09\u5b8c\u6210\u8bfb\u5199\u64cd\u4f5c"),(0,r.kt)("h3",{id:"selector-\u9009\u62e9\u5668"},"Selector \u9009\u62e9\u5668"),(0,r.kt)("h4",{id:"\u4ec0\u4e48\u662f-selector"},"\u4ec0\u4e48\u662f Selector"),(0,r.kt)("p",null,"Java \u7684 NIO \u4f7f\u7528\u975e\u963b\u585e\u7684 IO \u65b9\u5f0f\u3002 Selector\uff08\u9009\u62e9\u5668\uff09\u53ef\u4ee5\u7528\u4e00\u4e2a\u7ebf\u7a0b\u5904\u7406\u591a\u4e2a\u5ba2\u6237\u7aef\u8fde\u63a5"),(0,r.kt)("p",null,"Selector \u80fd\u591f\u68c0\u6d4b\u591a\u4e2a\u6ce8\u518c\u7684\u901a\u9053\u4e0a\u662f\u5426\u6709\u4e8b\u4ef6\u53d1\u751f\uff08\u591a\u4e2a\u4e8b\u4ef6\u7684\u65b9\u5f0f\u53ef\u4ee5\u6ce8\u518c\u5230\u540c\u4e00\u4e2aSelector\uff09\uff0c\u5982\u679c\u6709\u4e8b\u4ef6\u53d1\u751f\uff0c\u4fbf\u83b7\u53d6\u4e8b\u4ef6\u7136\u540e\u9488\u5bf9\u6bcf\u4e2a\u4e8b\u4ef6\u8fdb\u884c\u76f8\u5e94\u5904\u7406\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u53ea\u7528\u4e00\u4e2a\u5355\u7ebf\u7a0b\u53bb\u7ba1\u7406\u591a\u4e2a\u901a\u9053\uff0c\u4e5f\u5c31\u662f\u7ba1\u7406\u591a\u4e2a\u8fde\u63a5\u548c\u8bf7\u6c42\u3002"),(0,r.kt)("p",null,"\u53ea\u6709\u5728 \u8fde\u63a5/\u901a\u9053 \u771f\u6b63\u6709\u8bfb\u5199\u4e8b\u4ef6\u53d1\u751f\u65f6\uff0c\u624d\u4f1a\u8fdb\u884c\u8bfb\u5199\uff0c\u8fd9\u6837\u5c31\u5927\u5927\u7684\u51cf\u5c11\u4e86\u7cfb\u7edf\u5f00\u9500\uff0c\u5e76\u4e14\u4e0d\u5fc5\u4e3a\u6bcf\u4e2a\u8fde\u63a5\u90fd\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u4e0d\u7528\u53bb\u7ef4\u62a4\u591a\u4e2a\u7ebf\u7a0b"),(0,r.kt)("h4",{id:"selector-\u7c7b\u76f8\u5173\u65b9\u6cd5"},"Selector \u7c7b\u76f8\u5173\u65b9\u6cd5"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public abstract class Selector implements Closeable {\n    // \u5f97\u5230\u4e00\u4e2a\u9009\u62e9\u5668\u5bf9\u8c61\n    public static Selector open() throws IOException {}\n    // \u76d1\u63a7\u6240\u6709\u6ce8\u518c\u7684\u901a\u9053\uff0c\u5f53\u5176\u4e2d\u6709IO\u64cd\u4f5c\u53ef\u4ee5\u8fdb\u884c\u65f6\uff0c\u5c06\u5bf9\u5e94\u7684\u52a0\u5165\u5230\u5185\u90e8\u7a3d\u6838\u4e2d\u5e76\u8fd4\u56de\uff0c\u53c2\u6570\u7528\u6765\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4\n    public abstract int select(long timeout) throws IOException;\n    // \u4ece\u5185\u90e8\u96c6\u5408\u4e2d\u83b7\u5f97\u5230\u6240\u6709\u7684 SelectionKey\n    public abstract Set<SelectionKey> selectedKeys();\n}\n")),(0,r.kt)("p",null,"NIO \u4e2d\u7684 ServerSocketChannel \u529f\u80fd\u7c7b\u4f3c\u4e8e ServerSocket\uff0cSocketChannel  \u529f\u80fd\u7c7b\u4f3c\u4e8e Socket"),(0,r.kt)("p",null,"Selector\u76f8\u5173\u65b9\u6cd5\u8bf4\u660e\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"selector.select(); // \u963b\u585e\nselector.select(1000); // \u963b\u585e1000\u6beb\u79d2\uff0c\u57281000\u6beb\u79d2\u540e\u8fd4\u56de\nselector.wakeup(); // \u5524\u9192 Selector\nselector.selectNow(); //\u6b65\u963b\u585e\uff0c\u7acb\u9a6c\u8fd4\u56de\n")),(0,r.kt)("h3",{id:"nio-\u5feb\u901f\u5165\u95e8"},"NIO \u5feb\u901f\u5165\u95e8"),(0,r.kt)("p",null,"\u7f16\u5199\u4e00\u4e2a\u670d\u52a1\u7aef"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'package io.mvvm.nio.demo;\n\nimport java.io.IOException;\nimport java.net.InetSocketAddress;\nimport java.nio.ByteBuffer;\nimport java.nio.channels.SelectionKey;\nimport java.nio.channels.Selector;\nimport java.nio.channels.ServerSocketChannel;\nimport java.nio.channels.SocketChannel;\nimport java.util.Iterator;\nimport java.util.Set;\n\npublic class NioServer {\n    public static void main(String[] args) throws IOException {\n        // \u521b\u5efa ServerSocketChannel -> ServerSocket\n        ServerSocketChannel serverSocketChannel = ServerSocketChannel.open();\n\n        // \u5f97\u5230\u4e00\u4e2aSelecor\u5bf9\u8c61\n        Selector selector = Selector.open();\n\n        // \u7ed1\u5b9a\u4e00\u4e2a\u7aef\u53e3 \uff0c\u5728\u670d\u52a1\u5668\u7aef\u76d1\u542c\n        serverSocketChannel.socket().bind(new InetSocketAddress(6666));\n        // \u8bbe\u7f6e\u4e3a\u975e\u963b\u585e\n        serverSocketChannel.configureBlocking(false);\n\n        // \u5427 serverSocketChannel \u6ce8\u518c\u5230 selector \u5e76\u4e14\u4e8b\u4ef6\u8bbe\u7f6e\u4e3a OP_ACCEPT\n        serverSocketChannel.register(selector, SelectionKey.OP_ACCEPT);\n\n        // \u7b49\u5f85\u5ba2\u6237\u7aef\u8fde\u63a5\n        while (true) {\n            // \u7b49\u5f85\u4e00\u79d2\uff0c\u5982\u679c\u6ca1\u6709\u4e8b\u4ef6\u53d1\u751f\u5219\u8fd4\u56de\n            if (selector.select(1000) == 0) {\n                System.out.println("\u670d\u52a1\u5668\u7b49\u5f85\u4e861\u79d2\uff0c\u65e0\u8fde\u63a5");\n                continue;\n            }\n\n            // \u5982\u679c\u8fd4\u56de\u7684\u5927\u4e8e0\uff0c\u5c31\u83b7\u53d6\u5230\u76f8\u5173\u7684selectionKey\u96c6\u5408\n            // 1\u3001\u5982\u679c\u8fd4\u56de\u7684\u5927\u4e8e0\uff0c\u8868\u793a\u5df2\u7ecf\u83b7\u53d6\u5230\u5173\u6ce8\u7684\u4e8b\u4ef6\n            // 2\u3001selector.selectedKeys() \u8fd4\u56de\u5173\u6ce8\u4e8b\u4ef6\u7684\u96c6\u5408\n            // \u901a\u8fc7 selectionKeys \u53cd\u5411\u83b7\u53d6\u901a\u9053\n            Set<SelectionKey> selectionKeys = selector.selectedKeys();\n\n            Iterator<SelectionKey> keyIterator = selectionKeys.iterator();\n            while (keyIterator.hasNext()) {\n                // \u83b7\u53d6\u5230SelectionKey\n                SelectionKey key = keyIterator.next();\n\n                // \u6839\u636eKey\u5bf9\u5e94\u7684\u901a\u9053\u53d1\u751f\u7684\u4e8b\u4ef6\u505a\u76f8\u5e94\u5904\u7406\n\n                // \u5982\u679c\u662f OP_ACCEPT\uff0c\u6709\u65b0\u7684\u5ba2\u6237\u7aef\u8fde\u63a5\n                if (key.isAcceptable()) {\n                    // \u8be5\u5ba2\u6237\u7aef\u751f\u6210\u4e00\u4e2aSocketChannel\n                    SocketChannel socketChannel = serverSocketChannel.accept();\n                    System.out.println("\u5ba2\u6237\u7aef\u8fde\u63a5\u6210\u529f\uff0c\u751f\u6210\u4e86\u4e00\u4e2a socketChannel\uff1a" + socketChannel.hashCode());\n                    // \u5c06 SocketChannel \u8bbe\u7f6e\u4e3a\u975e\u963b\u585e\n                    socketChannel.configureBlocking(false);\n                    // \u5173\u95edsocketChannel\u6ce8\u518c\u5230selector\uff0c\u5173\u6ce8\u4e8b\u4ef6\u4e3aOP_READ\uff0c\u540c\u65f6\u7ed9 socketChannel \u5173\u8054\u4e00\u4e2a Buffer\n                    socketChannel.register(selector, SelectionKey.OP_READ, ByteBuffer.allocate(1024));\n                }\n\n                // \u53d1\u751fOP_READ\n                if (key.isReadable()) {\n                    // \u901a\u8fc7key \u53cd\u5411\u83b7\u53d6\u5bf9\u5e94\u7684channel\n                    SocketChannel channel = (SocketChannel) key.channel();\n                    // \u83b7\u53d6\u5230\u8be5channel\u5173\u8054\u7684buffer\n                    ByteBuffer buffer = (ByteBuffer) key.attachment();\n                    channel.read(buffer);\n                    System.out.println("form \u5ba2\u6237\u7aef\uff1a" + new String(buffer.array()));\n                }\n\n                // \u624b\u52a8\u4ece\u96c6\u5408\u4e2d\u79fb\u9664\u5f53\u524d\u7684selectionKey\uff0c\u9632\u6b62\u91cd\u590d\u64cd\u4f5c\n                keyIterator.remove();\n            }\n\n\n        }\n\n    }\n}\n')),(0,r.kt)("p",null,"\u7f16\u5199\u4e00\u4e2a\u5ba2\u6237\u7aef"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'package io.mvvm.nio.demo;\n\nimport java.io.IOException;\nimport java.net.InetSocketAddress;\nimport java.nio.ByteBuffer;\nimport java.nio.channels.SocketChannel;\nimport java.nio.charset.StandardCharsets;\n\npublic class NioClient {\n\n    public static void main(String[] args) throws IOException {\n        // \u5f97\u5230\u4e00\u4e2a\u7f51\u7edc\u901a\u9053\n        SocketChannel socketChannel = SocketChannel.open();\n        // \u8bbe\u7f6e\u975e\u963b\u585e\n        socketChannel.configureBlocking(false);\n        // \u63d0\u4f9b\u670d\u52a1\u5668\u7aef\u7684ip\u548c\u7aef\u53e3\n        InetSocketAddress inetSocketAddress = new InetSocketAddress("127.0.0.1", 6666);\n        // \u8fde\u63a5\u670d\u52a1\u5668\n        if (!socketChannel.connect(inetSocketAddress)) {\n            while (!socketChannel.finishConnect()) {\n                System.out.println("\u56e0\u4e3a\u8fde\u63a5\u9700\u8981\u65f6\u95f4\uff0c\u5ba2\u6237\u7aef\u4e0d\u4f1a\u963b\u585e\uff0c\u53ef\u4ee5\u505a\u5176\u4ed6\u5de5\u4f5c...");\n            }\n        }\n\n        // \u5982\u679c\u8fde\u63a5\u6210\u529f\u5c31\u53d1\u9001\u6570\u636e\n        String sendMessage = "Hello Server";\n        ByteBuffer buffer = ByteBuffer.wrap(sendMessage.getBytes(StandardCharsets.UTF_8));\n        // \u53d1\u9001\u6570\u636e\uff0c\u5c06buffer\u6570\u636e\u5199\u5165channel\n        socketChannel.write(buffer);\n        System.in.read();\n\n    }\n\n}\n\n')),(0,r.kt)("h4",{id:"selectionkey"},"SelectionKey"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"SelectionKey \u8868\u793a Selector \u548c \u7f51\u7edc\u901a\u9053\u7684\u6ce8\u518c\u5173\u7cfb\uff0c\u4e00\u5171\u6709\u56db\u79cd")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"int OP_ACCEPT"),"\uff1a\u6709\u65b0\u7684\u7f51\u7edc\u8fde\u63a5\u53ef\u4ee5 accept\uff0c\u503c\u4e3a16\n",(0,r.kt)("inlineCode",{parentName:"p"},"int OP_CONNECT"),"\uff1a\u4ee3\u8868\u8fde\u63a5\u5df2\u7ecf\u5efa\u7acb\uff0c\u503c\u4e3a8\n",(0,r.kt)("inlineCode",{parentName:"p"},"int OP_READ"),"\uff1a\u4ee3\u8868\u8bfb\u64cd\u4f5c\uff0c\u503c\u4e3a1\n",(0,r.kt)("inlineCode",{parentName:"p"},"int OP_WRITE"),"\uff1a\u4ee3\u8868\u5199\u64cd\u4f5c\uff0c\u503c\u4e3a4"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u76f8\u5173\u65b9\u6cd5 *")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// \u5f97\u5230\u4e0e\u4e4b\u5173\u8054\u7684 Selector \u5bf9\u8c61\npublic abstract Selector selector();\n// \u5f97\u5230\u4e0e\u4e4b\u5173\u8054\u7684\u901a\u9053\npublic abstract SelectableChannel channel();\n// \u5f97\u5230\u4e0e\u4e4b\u5173\u8054\u7684\u5171\u4eab\u6570\u636e\npublic final Object attachment();\n// \u8bbe\u7f6e\u6216\u6539\u53d8\u76d1\u542c\u4e8b\u4ef6\npublic abstract SelectionKey interestOps(int ops);\n// \u662f\u5426\u53ef\u4ee5 accept\npublic final boolean isAcceptable();\n// \u662f\u5426\u53ef\u4ee5\u8bfb\npublic final boolean isReadable();\n// \u662f\u5426\u53ef\u4ee5\u5199\npublic final boolean isWritable();\n")),(0,r.kt)("h4",{id:"serversocketchannel"},"ServerSocketChannel"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u5728\u670d\u52a1\u5668\u7aef\u76d1\u542c\u5fc3\u7684\u5ba2\u6237\u7aef Socket \u8fde\u63a5")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u76f8\u5173\u65b9\u6cd5 *")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// \u5f97\u5230\u4e00\u4e2a ServerSocketChannel \u901a\u9053\npublic static ServerSocketChannel open();\n// \u8bbe\u7f6e\u670d\u52a1\u5668\u7aef\u7684\u7aef\u53e3\u53f7\npublic final ServerSocketChannel bind(SocketAddress local);\n// \u8bbe\u7f6e\u963b\u585e\u6216\u975e\u963b\u585e\u6a21\u5f0f\uff0cfalse\u8868\u793a\u91c7\u7528\u975e\u963b\u585e\u6a21\u5f0f\npublic final SelectableChannel configureBlocking(boolean block);\n// \u63a5\u6536\u4e00\u4e2a\u8fde\u63a5\uff0c\u8fd4\u56de\u4ee3\u8868\u8fd9\u4e2a\u8fde\u63a5\u7684\u901a\u9053\u5bf9\u8c61\npublic SocketChannel accept();\n// \u6ce8\u518c\u4e00\u4e2a\u9009\u62e9\u5668\u5e76\u8bbe\u7f6e\u76d1\u542c\u4e8b\u4ef6\npublic final SelectionKey register(Selector sel, int ops);\n")),(0,r.kt)("h4",{id:"socketchannel"},"SocketChannel"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"SocketChannel \u7f51\u7edc IO \u901a\u9053\uff0c\u5177\u4f53\u8d1f\u8d23\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\uff0cNIO \u628a\u7f13\u51b2\u533a\u7684\u6570\u636e\u5199\u5165\u901a\u9053\uff0c\u6216\u8005\u628a\u901a\u9053\u91cc\u7684\u6570\u636e\u8bfb\u5230\u7f13\u51b2\u533a")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u76f8\u5173\u65b9\u6cd5 *")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// \u5f97\u5230\u4e00\u4e2a SocketChannel \u901a\u9053\npublic static SocketChannel open();\n// \u8bbe\u7f6e\u963b\u585e\u6216\u975e\u963b\u585e\u6a21\u5f0f\uff0cfalse\u8868\u793a\u91c7\u7528\u975e\u963b\u585e\u6a21\u5f0f\npublic final SelectableChannel configureBlocking(boolean block);\n// \u8fde\u63a5\u670d\u52a1\u5668\npublic abstract boolean connect(SocketAddress remote);\n// \u5982\u679c\u4e0a\u9762\u7684\u65b9\u6cd5\u8fde\u63a5\u5931\u8d25\uff0c\u63a5\u4e0b\u6765\u5c31\u8981\u901a\u8fc7\u8be5\u65b9\u6cd5\u5b8c\u6210\u8fde\u63a5\u64cd\u4f5c\npublic abstract boolean finishConnect();\n// \u5f80\u901a\u9053\u91cc\u5199\u6570\u636e\npublic abstract int write(ByteBuffer src);\n// \u4ece\u901a\u9053\u91cc\u8bfb\u6570\u636e\npublic abstract int read(ByteBuffer dst);\n// \u6ce8\u518c\u4e00\u4e2a\u9009\u62e9\u5668\u5e76\u8bbe\u7f6e\u76d1\u542c\u4e8b\u4ef6\uff0c\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u53ef\u4ee5\u8bbe\u7f6e\u5171\u4eab\u6570\u636e\npublic abstract SelectionKey register(Selector sel, int ops, Object att)\n// \u5173\u95ed\u901a\u9053\npublic final void close();\n")),(0,r.kt)("h3",{id:"\u7f16\u5199\u4e00\u4e2a\u7fa4\u804a\u5c0f\u5e94\u7528"},"\u7f16\u5199\u4e00\u4e2a\u7fa4\u804a\u5c0f\u5e94\u7528"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u5b9e\u73b0\u601d\u8def\uff1a"),(0,r.kt)("p",{parentName:"blockquote"},"1\u3001\u9996\u5148\u9700\u8981\u4e00\u4e2a\u670d\u52a1\u7aef\uff0c\u670d\u52a1\u7aef\u4e3b\u8981\u5b9e\u73b0\u63a5\u6536\u5ba2\u6237\u7aef\u7684\u4fe1\u606f\uff0c\u7136\u540e\u5c06\u6d88\u606f\u8f6c\u53d1\u7ed9\u5176\u4ed6\u5ba2\u6237\u7aef"),(0,r.kt)("p",{parentName:"blockquote"},"2\u3001\u7f16\u5199\u4e00\u4e2a\u5ba2\u6237\u7aef\uff0c\u5ba2\u6237\u7aef\u4e3b\u8981\u7528\u4e8e\u63a5\u6536\u670d\u52a1\u5668\u8f6c\u53d1\u7684\u6d88\u606f\u4ee5\u53ca\u53d1\u9001\u6d88\u606f\u5230\u670d\u52a1\u7aef")),(0,r.kt)("h4",{id:"\u670d\u52a1\u7aef"},"\u670d\u52a1\u7aef"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'package io.mvvm.nio.group;\n\nimport java.io.IOException;\nimport java.net.InetSocketAddress;\nimport java.nio.ByteBuffer;\nimport java.nio.channels.*;\nimport java.nio.charset.StandardCharsets;\nimport java.util.Iterator;\n\n/**\n * @program: Netty\n * @description: \u7fa4\u804a\u670d\u52a1\u7aef\n * @author: \u6f58\n * @create: 2021-03-13 14:31\n **/\npublic class ChatServer {\n    // \u5b9a\u4e49\u5c5e\u6027\n    private Selector selector;\n    private ServerSocketChannel listenChannel;\n    private static final int PORT = 6667;\n\n    public ChatServer() {\n        try {\n            // \u5f97\u5230\u9009\u62e9\u5668\n            selector = Selector.open();\n            // ServerSocketChannel\n            listenChannel = ServerSocketChannel.open();\n            // \u7ed1\u5b9a\u7aef\u53e3\n            listenChannel.socket().bind(new InetSocketAddress(PORT));\n            // \u8bbe\u7f6e\u975e\u963b\u585e\u6a21\u5f0f\n            listenChannel.configureBlocking(false);\n            // \u5c06listenChannel\u6ce8\u518c\u5230 selector\n            listenChannel.register(selector, SelectionKey.OP_ACCEPT);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    // \u76d1\u542c\n    public void listen() {\n        try {\n            // \u5faa\u73af\u5904\u7406\n            while (true) {\n                int count = selector.select();\n\n                // \u6709\u4e8b\u4ef6\u5904\u7406\n                if (count > 0) {\n                    // \u904d\u5386\u5f97\u5230 selectionKey \u96c6\u5408\n                    Iterator<SelectionKey> keyIterator = selector.selectedKeys().iterator();\n                    while (keyIterator.hasNext()) {\n                        // \u53d6\u51fa selectionKey\n                        SelectionKey key = keyIterator.next();\n                        // \u76d1\u542c\u5230 accept\n                        if (key.isAcceptable()) {\n                            SocketChannel sc = listenChannel.accept();\n                            sc.configureBlocking(false);\n                            // \u5c06sc\u6ce8\u518c\u5230seletor\n                            sc.register(selector, SelectionKey.OP_READ);\n\n                            System.out.println(sc.getRemoteAddress() + "\u4e0a\u7ebf");\n                        }\n\n                        // \u901a\u9053\u53d1\u9001 read \u4e8b\u4ef6\uff0c\u5373\u901a\u9053\u662f\u53ef\u8bfb\u7684\u72b6\u6001\n                        if (key.isReadable()) {\n                            readData(key);\n                        }\n                        // \u5220\u9664\u5f53\u524dkey\uff0c\u9632\u6b62\u91cd\u590d\u5904\u7406\n                        keyIterator.remove();\n                    }\n                }\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n\n        }\n    }\n\n\n    // \u8bfb\u53d6\u5ba2\u6237\u7aef\u6d88\u606f\n    private void readData(SelectionKey key) {\n        // \u53d6\u5230\u5173\u8054\u7684channel\n        SocketChannel channel = null;\n\n        try {\n            // \u5f97\u5230channel\n            channel = (SocketChannel) key.channel();\n            // \u521b\u5efabuffer\n            ByteBuffer buffer = ByteBuffer.allocate(1024);\n\n            int count = channel.read(buffer);\n            if (count > 0) {\n                // \u628a\u7f13\u51b2\u533a\u7684\u6570\u636e\u8f6c\u4e3a\u5b57\u7b26\u4e32\n                String msg = new String(buffer.array());\n                System.out.println("form \u5ba2\u6237\u7aef\uff1a" + msg);\n\n                // \u8c61\u5176\u4ed6\u7684\u5ba2\u6237\u7aef\u8f6c\u53d1\u6d88\u606f\uff08\u53bb\u6389\u81ea\u5df1\uff09\n                sendInfoToOtherClients(msg, channel);\n            }\n\n        } catch (IOException e) {\n            try {\n                System.out.println(channel.getRemoteAddress() + "\u4e0b\u7ebf\u4e86...");\n                // \u53d6\u6d88\u6ce8\u518c\n                key.cancel();\n                // \u5173\u95ed\u901a\u9053\n                channel.close();\n            } catch (IOException ioException) {\n                ioException.printStackTrace();\n            }\n        }\n    }\n\n    // \u8f6c\u53d1\u6d88\u606f\u7ed9\u5176\u4ed6\u5ba2\u6237\u7aef\uff08\u901a\u9053\uff09\n    private void sendInfoToOtherClients(String msg, SocketChannel self) throws IOException{\n        System.out.println("\u670d\u52a1\u5668\u8f6c\u53d1\u6d88\u606f\u4e2d...");\n        // \u904d\u5386\u6240\u6709\u6ce8\u518c\u5230Selector\u4e0a\u7684 SocketChannel\u5e76\u6392\u9664 self\n        for (SelectionKey key : selector.keys()) {\n            // \u901a\u8fc7key\u53d6\u51fa\u5bf9\u5e94\u7684socketChannel\n            Channel targetChannel = key.channel();\n\n            // \u6392\u9664\u81ea\u5df1\n            if (targetChannel instanceof SocketChannel && targetChannel != self) {\n                // \u8f6c\u578b\n                SocketChannel dest = (SocketChannel) targetChannel;\n                // \u5c06msg\u5b58\u50a8\u5230buffer\n                ByteBuffer buffer = ByteBuffer.wrap(msg.getBytes(StandardCharsets.UTF_8));\n                // \u5c06buffer\u7684\u6570\u636e\u5199\u5165\u901a\u9053\n                dest.write(buffer);\n            }\n        }\n    }\n\n    public static void main(String[] args) {\n        ChatServer server = new ChatServer();\n        server.listen();\n    }\n}\n\n')),(0,r.kt)("h4",{id:"\u5ba2\u6237\u7aef"},"\u5ba2\u6237\u7aef"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'package io.mvvm.nio.group;\n\nimport java.io.IOException;\nimport java.net.InetSocketAddress;\nimport java.nio.ByteBuffer;\nimport java.nio.channels.SelectionKey;\nimport java.nio.channels.Selector;\nimport java.nio.channels.SocketChannel;\nimport java.nio.charset.StandardCharsets;\nimport java.util.Iterator;\nimport java.util.Scanner;\n\n/**\n * @program: Netty\n * @description: \u5ba2\u6237\u7aef\n * @author: \u6f58\n * @create: 2021-03-13 14:51\n **/\npublic class ChatClient {\n    // \u670d\u52a1\u7aef\u7684IP\n    private final String HOST = "127.0.0.1";\n    // \u670d\u52a1\u7aef\u7684\u7aef\u53e3\n    private final int PORT = 6667;\n\n    private Selector selector;\n    private SocketChannel socketChannel;\n    private String username;\n\n    public ChatClient() throws IOException {\n        selector = Selector.open();\n\n        // \u8fde\u63a5\u670d\u52a1\u7aef\n        socketChannel = SocketChannel.open(new InetSocketAddress(HOST, PORT));\n        // \u8bbe\u7f6e\u975e\u963b\u585e\n        socketChannel.configureBlocking(false);\n        // \u5c06 channel \u6ce8\u518c\u5230 selector\n        socketChannel.register(selector, SelectionKey.OP_READ);\n        // \u5f97\u5230username\n        username = socketChannel.getLocalAddress().toString().substring(1);\n        System.out.println(username + " is ok...");\n    }\n\n    // \u5411\u670d\u52a1\u7aef\u53d1\u9001\u6d88\u606f\n    public void sendInfo(String info) {\n        info = username + " \u8bf4\uff1a " + info;\n\n        try {\n            socketChannel.write(ByteBuffer.wrap(info.getBytes(StandardCharsets.UTF_8)));\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n    }\n\n    // \u8bfb\u53d6\u4ece\u670d\u52a1\u7aef\u56de\u590d\u7684\u6d88\u606f\n    public void readInfo() {\n        try {\n            int readChannels = selector.select();\n            // \u6709\u53ef\u7528\u7684\u901a\u9053\n            if (readChannels > 0) {\n\n                Iterator<SelectionKey> iterator = selector.selectedKeys().iterator();\n                while (iterator.hasNext()) {\n                    SelectionKey key = iterator.next();\n\n                    if (key.isReadable()) {\n                        // \u5f97\u5230\u76f8\u5173\u7684\u901a\u9053\n                        SocketChannel sc = (SocketChannel) key.channel();\n                        // \u5f97\u5230\u4e00\u4e2a buffer\n                        ByteBuffer buffer = ByteBuffer.allocate(1024);\n                        // \u8bfb\u53d6\n                        sc.read(buffer);\n                        // \u628a\u8bfb\u5230\u7684\u7f13\u51b2\u533a\u7684\u6570\u636e\u8f6c\u4e3a\u5b57\u7b26\u4e32\n                        String msg = new String(buffer.array());\n                        System.out.println("\u5f97\u5230\u6d88\u606f\uff1a"+msg.trim());\n                    }\n                }\n                // \u5220\u9664\u5f53\u524d\u7684selectionKey\n                iterator.remove();\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public static void main(String[] args) throws IOException {\n        ChatClient client = new ChatClient();\n        // \u542f\u52a8\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u6bcf\u4e2a3\u79d2\uff0c\u8bfb\u53d6\u4ece\u670d\u52a1\u5668\u53d1\u9001\u6570\u636e\n        new Thread(){\n            public void run() {\n                while (true) {\n                    client.readInfo();\n\n                    try {\n                        Thread.currentThread().sleep(3000);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                }\n            }\n        }.start();\n\n        // \u53d1\u9001\u6570\u636e\u5230\u670d\u52a1\u7aef\n        Scanner scanner = new Scanner(System.in);\n\n        while (scanner.hasNextLine()) {\n            System.out.println("\u8bf7\u8f93\u5165\u53d1\u9001\u7684\u6d88\u606f\uff1a");\n            String s = scanner.nextLine();\n            client.sendInfo(s);\n        }\n    }\n}\n\n')),(0,r.kt)("h3",{id:"\u96f6\u62f7\u8d1d"},"\u96f6\u62f7\u8d1d"))}f.isMDXComponent=!0}}]);